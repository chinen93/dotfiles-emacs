#+TITLE:        Yasnippet Configurations
#+AUTHOR:       Pedro Chinen
#+DATE-CREATED: [2018-09-23 Sun]
#+DATE-UPDATED: [2019-05-27 seg]

YASnippet is a template system for Emacs. It allows you to type an abbreviation and automatically expand it into function templates. Bundled language templates include: C, C++, C#, Perl, Python, Ruby, SQL, LaTeX, HTML, CSS and more.

https://joaotavora.github.io/yasnippet/

Load package to be used in this condfiguration.
#+BEGIN_SRC emacs-lisp
  (require-package 'yasnippet)

  (message "Yasnippet - Loaded")

#+END_SRC

* Provide File
:PROPERTIES:
:ID:       0a01efe1-3948-4017-b344-38ecef7b2a48
:END:
#+BEGIN_SRC emacs-lisp
  (provide 'init-yasnippet)
#+END_SRC
* Snippets Location
:PROPERTIES:
:ID:       bb384859-63d5-4e82-a43d-ff9e341de4f0
:END:

My default snippets folder is in *~/emacsSnippets*.
#+BEGIN_SRC emacs-lisp
  ;; Default directories to seek for snippets
  (setq yas-snippet-dirs
    ;; Personal Collection
    `(,my/snippets-folder))

#+END_SRC

And they are organized in a specific order, where /printf/, /for/, /while/, /println/, /email/, /time/ are snippets in their respectivly mode directories.
#+BEGIN_SRC text
  .
  |-- c-mode
  |   |-- .yas-parents    # contains "cc-mode text-mode"
  |   `-- printf
  |-- cc-mode
  |   |-- for
  |   `-- while
  |-- java-mode
  |   |-- .yas-parents    # contains "cc-mode text-mode"
  |   `-- println
  `-- text-mode
      |-- email
      `-- time
#+END_SRC

*.yas-parents* is a file that contains, a whitespace-separated, list with mode names. It represents that those modes have shared snippets. So in the last example when you are in the c-mode you can also use cc-mode and text-mode snippets.

* Configuration
:PROPERTIES:
:ID:       505528f7-f256-4161-8fc8-2cba26a63e05
:END:

Surppress yasnippet backquote changes.
#+BEGIN_SRC emacs-lisp
  (setq warning-suppress-types '(yasnippet backquote-change))

#+END_SRC

Controls indenting applied to snippets. Indent the snippet to the current column.
#+BEGIN_SRC emacs-lisp
  (setq yas-indent-line 'fixed)

#+END_SRC

* Enable Yasnippets Globally
:PROPERTIES:
:ID:       55addacd-953a-4a5a-b734-1ad0584f6db0
:END:
#+BEGIN_SRC emacs-lisp
  ;; Enable yasnippet mode globally
  (yas-global-mode)

#+END_SRC

* Auto Insert
:PROPERTIES:
:ID:       c60dc91c-d3e9-4d09-93fc-6b6fb64db81b
:END:
http://www.howardism.org/Technical/Emacs/templates-tutorial.html

A mode that comes with Emacs that automagically inserts text into new buffers based on file extension or the major mode.

#+BEGIN_SRC emacs-lisp
  (use-package autoinsert
    :init
    (add-hook 'find-file-hook 'auto-insert)
    (auto-insert-mode 1))
#+END_SRC

** Set Templates Directory
:PROPERTIES:
:ID:       5a6610c1-650f-4451-b8e1-fbc97ade5f2d
:END:

Place where to search for templates

#+BEGIN_SRC emacs-lisp
    (setq auto-insert-directory my/snippets-folder)
#+END_SRC

** Don't ask before insertion
:PROPERTIES:
:ID:       15f88107-1564-46ff-a78d-9ff3aff313e2
:END:

Don't want to be prompted before insertion. I want this process to be less painful as possible.
#+BEGIN_SRC emacs-lisp
    (setq auto-insert-query nil)
#+END_SRC

** How to expand: YASNIPPET
:PROPERTIES:
:ID:       a5ef9ed7-8e18-45e5-816e-147bbffafbd2
:END:

Use the yasnippet project to expand templates. This allows the usage of yasnippet syntax. Which makes everything consistent.
#+BEGIN_SRC emacs-lisp
  (defun autoinsert-yas-expand()
    "Replace text in yasnippet template."
    (yas-expand-snippet (buffer-string) (point-min) (point-max)))
#+END_SRC

** List of Templates
:PROPERTIES:
:ID:       5938311d-0152-48cb-8371-1acbccb6dfda
:END:

Extension to template list.
- First element is the extension in which the auto-insert will expand.
- Second is a vector with the name of the template and the function to expand it.

#+BEGIN_SRC emacs-lisp
  (setq auto-insert-alist nil)
  (define-auto-insert "\\.py$" ["template/base-python" autoinsert-yas-expand])
  (define-auto-insert "\\.sh$" ["template/base-sh" autoinsert-yas-expand])
  (define-auto-insert (regexp-opt '("Makefile" "makefile")) ["template/base-makefile" autoinsert-yas-expand])
#+END_SRC
