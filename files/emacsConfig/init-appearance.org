#+TITLE:        Appearance Configuration
#+AUTHOR:       Pedro Chinen
#+DATE-CREATED: [2023-12-06 Wed]
#+DATE-UPDATED: [2023-12-07 Thu]

* Themes
:PROPERTIES:
:Created:  2023-12-06
:END:

A *Theme* is a collection of graphical appearance details in order to
change the look and feel of a Graphical User Interface (GUI). Usually
comprises a set of shapes and colors.

Particularly, in Emacs' case, the different possibilities of themes
are limited, because of the nature of this program. A text editor. So
my transformations happens in three ways:
- Color Scheme.
- Font used.
- And basically everything to make the mode line more neat and fun.

"What is the Mode Line?", you may be asking. At the bottom of each
window is a mode line, which describes what is going on in the current
buffer. Showing the most relevant information about it, the name of
the buffer, it's activated modes, if there is something new and a lot
more.

** Theme Packages
:PROPERTIES:
:Created:  2023-12-07
:END:
*** CANCELED Package: Zenburn
:PROPERTIES:
:ID:       c39c049d-3c1c-4f96-8f82-fa80f41c385e
:END:
#+BEGIN_SRC emacs-lisp
  (use-package zenburn-theme
    :ensure t
    :config
    ;; use variable-pitch fonts for some headings and titles
    (setq zenburn-use-variable-pitch t)

    ;; scale headings in org-mode
    (setq zenburn-scale-org-headlines t)

    ;; scale headings in outline-mode
    (setq zenburn-scale-outline-headlines t))

#+END_SRC

*** CANCELED Package: Monokai
:PROPERTIES:
:ID:       6742532e-84c8-4fba-8b58-094002df97de
:END:
#+BEGIN_SRC emacs-lisp :tangle no
  (use-package monokai-theme
    :ensure t)

#+END_SRC

*** CANCELED Package: color-theme-sanityinc-tomorrow
:PROPERTIES:
:ID:       f797f089-ce9f-4629-bc8f-cca1eb693df1
:END:
#+BEGIN_SRC emacs-lisp
  (use-package color-theme-sanityinc-tomorrow
    :ensure t)

#+END_SRC

*** Package: Solarized
:PROPERTIES:
:Created:  2023-12-07
:END:

#+begin_src emacs-lisp

  (use-package solarized-theme
    :ensure t
    :config

    (setq solarized-height-minus-1 0.8) ;; 0.8
    (setq solarized-height-plus-1 1.25) ;; 1.1
    (setq solarized-height-plus-2 1.3) ;; 1.15
    (setq solarized-height-plus-3 1.35) ;; 1.2
    (setq solarized-height-plus-4 1.45) ;; 1.3

    (setq solarized-distinct-doc-face t)
    (setq solarized-high-contrast-mode-line nil)
    (setq solarized-distinct-fringe-background t)

    (load-theme 'solarized-dark-high-contrast t))

#+end_src

** My Theme
:PROPERTIES:
:Created:  2023-11-27
:END:
#+begin_src emacs-lisp

(defface my/face-org-agenda-daily-diary
  '((t
     :foreground "black"
     :background "papaya whip"))
  "Face for org agenda daily diary entries"
  :group 'my/faces)

(defface my/face-org-agenda-important-dates
  '((t
     :foreground "black"
     :background "thistle"))
  "Face for org agenda important dates entries"
  :group 'my/faces)

(defface my/face-org-agenda-one-time
  '((t
     :foreground "white"
     :background "indian red"))
  "Face for org agenda one time entries"
  :group 'my/faces)

#+end_src

*** Helper Functions
:PROPERTIES:
:ID:       d2d2479d-783c-4c73-b5ef-5f52eda7f244
:END:

**** Set Theme
:PROPERTIES:
:ID:       9fb64727-0c7e-4f23-a7c5-57662a36ddc1
:END:
#+BEGIN_SRC emacs-lisp

  (defun sakshamsharma-setTheme (themeName)
    "Set the theme to THEMENAME."
    (interactive "sWhat theme do you want to use? ")
    (when (display-graphic-p)
      (load-theme (intern themeName) t)))

#+END_SRC

**** Set Font
:PROPERTIES:
:ID:       dd1e38f4-877f-4b69-8558-b3238c305e26
:END:
#+BEGIN_SRC emacs-lisp

  (defun sakshamsharma-setFont (fntName)
    "Set the font to FNTNAME."
    (interactive "sWhat font name do you want to set? ")
    (set-face-attribute 'default nil
                        :family fntName
                        :height 105
                        :weight 'normal
                        :width 'normal))

#+END_SRC

**** Set Theme and Font on Startup
:PROPERTIES:
:ID:       94e488a7-f590-4ba2-89c4-30c00f9596bb
:END:

#+BEGIN_SRC emacs-lisp

  (defun sakshamsharma-frameActions ()
    "Do actions to set up appearance of frame."
    (interactive)
    (let ((myFont (if (not (eq system-type 'windows-nt))
                      "DejaVu Sans Mono"
                    "Lucida Console")))
      ;; (disableBells)
      (sakshamsharma-setFont myFont)))

  (sakshamsharma-frameActions)

#+END_SRC

* Appearance Packages
:PROPERTIES:
:Created:  2023-12-07
:END:

** Package: Rainbow
:PROPERTIES:
:Created:  2023-12-07
:END:

#+begin_src emacs-lisp

(use-package rainbow-mode
  :ensure t
  :hook ((prog-mode text-mode) . rainbow-mode))

#+end_src

** Package: Rainbow Delimiters
:PROPERTIES:
:ID:       a8dd458b-12a8-4843-812e-311b2ed3eb67
:END:
#+BEGIN_SRC emacs-lisp

  (use-package rainbow-delimiters
    :ensure t
    :hook ((prog-mode text-mode) . rainbow-delimiters-mode))

#+END_SRC

* Fonts
:PROPERTIES:
:Created:  2023-12-07
:END:

** CANCELED Icons
:PROPERTIES:
:Created:  2023-12-07
:END:

#+begin_src emacs-lisp

  (use-package all-the-icons
    :if (display-graphic-p)
    :ensure t
    :commands all-the-icons-install-fonts
    :config (unless (find-font (font-spec :name "all-the-icons"))
              (all-the-icons-install-fonts t)))

#+end_src

* Minibuffer
:PROPERTIES:
:Created:  2023-12-06
:END:
** Show More Info in the Mode Line
:PROPERTIES:
:ID:       03a863ae-0cb0-4cad-9d41-a2c24021b913
:END:

Show number of line and column
#+begin_src emacs-lisp

  (line-number-mode 1)
  (setq column-number-mode t)

#+end_src

** CANCELED Load Package: Diminish
:PROPERTIES:
:ID:       138ac899-9c43-4ff8-954d-2e40b27a09e7
:END:

Don't show every major and minor mode that is active in the
moment. Just those that are really important.
#+BEGIN_SRC emacs-lisp :tangle no

  (use-package diminish
    :ensure t)

  (when (featurep 'diminish)
    (diminish 'ivy-mode)
    (diminish 'company-mode)
    (diminish 'elmacro-mode)
    (diminish 'yas-global-mode)
    (diminish 'yas-minor-mode)
    (diminish 'flycheck-mode " FC")
    (diminish 'auto-revert-mode)

    (diminish 'helm))

#+END_SRC

** Load Package: Nyan Cat
:PROPERTIES:
:ID:       f2dcede5-e561-4ef5-9832-2bb34d3e63e0
:END:

Package to replace the need for the scroll bar on the sides of the
frame. It is also a bit of color in the frame.
#+BEGIN_SRC emacs-lisp

  (use-package nyan-mode
    :ensure t)

  (when (featurep 'nyan-mode)
    ;; Max length of the nyan rainbow trail
    (setq nyan-bar-length 10)

    ;; start nyan mode
    (nyan-mode 1))

#+END_SRC

** Load Package: Moody
:PROPERTIES:
:ID:       6e3f681f-a8dd-4686-9307-94a7f2ac5b2b
:END:

#+BEGIN_SRC emacs-lisp

  (use-package moody
    :ensure t
    :config
    (setq x-underline-at-descent-line 5)
    (moody-replace-mode-line-buffer-identification)
    (moody-replace-vc-mode))

#+END_SRC

** Load Package: Minions
:PROPERTIES:
:ID:       45d6a6c3-0d9c-4fa6-b52c-361b3bb0457a
:END:
#+BEGIN_SRC emacs-lisp

  (use-package minions
    :ensure t
    :init (minions-mode))

#+END_SRC

* Provide File
:PROPERTIES:
:ID:       0a01efe1-3948-4017-b344-38ecef7b2a48
:END:
#+BEGIN_SRC emacs-lisp
  (provide 'init-appearance)
#+END_SRC
