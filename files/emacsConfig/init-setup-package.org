#+BEGIN_SRC emacs-lisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; Setup Packages
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (require 'package)
  (package-initialize)

  (setq package-enable-at-startup nil)
  (setq file-name-handler-alist nil)
  (setq message-log-max 16384)
  (setq gc-cons-threshold (* 50 1000 1000))
  (setq gc-cons-percentage 0.6)
  (setq auto-window-vscroll nil)

  (add-hook 'after-init-hook
	    `(lambda ()
	       (setq gc-cons-threshold (* 2 1000 1000))
	       (setq gc-cons-percentage 0.1)
	       (garbage-collect))
	    t)

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; Purcell's way to install packages on emacs
  ;; https://github.com/purcell/emacs.d/blob/a8481a2179ba2c38e51c28504a04713dd33b1fa2/lisp/init-elpa.el#L48
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  (defun require-package (package &optional min-version no-refresh)
    "Install given PACKAGE, optionally requiring MIN-VERSION.
  If NO-REFRESH is non-nil, the available package lists will not be
  re-downloaded in order to locate PACKAGE."
    (if (package-installed-p package min-version)
	t
      (if (or (assoc package package-archive-contents) no-refresh)
	  (if (boundp 'package-selected-packages)
	      ;; Record this as a package the user installed explicitly
	      (package-install package nil)
	    (package-install package))
	(progn
	  (package-refresh-contents)
	  (require-package package min-version t)))))

  ;; If not in windows require these configs
  (unless (eq system-type 'windows-nt)

    (setq package-archives
	  '(("melpa-stable" . "https://stable.melpa.org/packages/")
	    ("melpa" . "https://melpa.org/packages/")
	    ("org" . "http://orgmode.org/elpa/")
	    ("gnu" . "http://elpa.gnu.org/packages/")
	    ("marmalade" . "http://marmalade-repo.org/packages/")))

    (require-package 'use-package)
    (setq use-package-verbose t)
    (setq load-prefer-newer t))

  (provide 'init-setup-package)

#+END_SRC
